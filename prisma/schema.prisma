generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carrier {
  id        String     @id @default(uuid())
  cnpj      String     @unique @db.VarChar(14)
  fantasia  String     @db.VarChar(70)
  trackings Tracking[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("carriers")
}

model Customer {
  id        String     @id @default(uuid())
  cpf       String     @unique
  name      String     @db.VarChar(50)
  addresses Address[]
  trackings Tracking[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("customers")
}

model Address {
  id         String     @id @default(uuid())
  customerId String
  customer   Customer   @relation(fields: [customerId], references: [id])
  cep        String     @db.VarChar(9)
  country    String     @db.VarChar(50)
  state      String     @db.VarChar(50)
  street     String     @db.VarChar(70)
  trackings  Tracking[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@map("addresses")
}

model StatusMessage {
  id             String           @id @default(uuid())
  message        String           @db.VarChar(50)
  date           DateTime         @default(now())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  trackingStatus TrackingStatus[]

  @@map("status_message")
}

model TrackingStatus {
  id            String        @id @default(uuid())
  trackingId    String
  tracking      Tracking      @relation(fields: [trackingId], references: [id])
  messageId     String
  statusMessage StatusMessage @relation(fields: [messageId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@map("tracking_status")
}

model Tracking {
  id             String           @id @default(uuid())
  customerId     String
  customer       Customer         @relation(fields: [customerId], references: [id])
  addressId      String
  address        Address          @relation(fields: [addressId], references: [id])
  carrierId      String
  carrier        Carrier          @relation(fields: [carrierId], references: [id])
  volume         Int
  shipper        String           @db.VarChar(70)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  trackingStatus TrackingStatus[]

  @@map("trackings")
}
