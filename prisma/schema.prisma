generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Carrier {
  id        String     @id @default(uuid())
  cnpj      String     @unique @db.VarChar(14)
  fantasia  String     @db.VarChar(70)
  Tracking  Tracking[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("carriers")
}

model Customer {
  id        String     @id @default(uuid())
  cpf       String     @unique @db.VarChar(11)
  nome      String     @db.VarChar(50)
  Address   Address[]
  Tracking  Tracking[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("customers")
}

model Address {
  id         String     @id @default(uuid())
  customerId String
  Customer   Customer   @relation(fields: [customerId], references: [id])
  cep        String     @db.VarChar(9)
  pais       String     @db.VarChar(50)
  estado     String     @db.VarChar(50)
  endereco   String     @db.VarChar(70)
  Tracking   Tracking[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@map("addresses")
}

model Tracking {
  id             String           @id @default(uuid())
  customerId     String
  Customer       Customer         @relation(fields: [customerId], references: [id])
  addressId      String
  Address        Address          @relation(fields: [addressId], references: [id])
  carrierId      String
  Carrier        Carrier          @relation(fields: [carrierId], references: [id])
  volumes        Int
  remetente      String           @db.VarChar(50)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  TrackingStatus TrackingStatus[]

  @@map("trackings")
}

// enum StatusMessage {
//   ENTREGA_CRIADA
//   EM_TRANSITO
//   CHEGADA_CIDADE_DESTINO
//   SAIU_PARA_ENTREGA
//   ENTREGA_REALIZADA
// }
model StatusMessage {
  id             String           @id @default(uuid())
  message        String           @db.VarChar(50)
  date           DateTime         @default(now())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  TrackingStatus TrackingStatus[]

  @@map("status_message")
}

model TrackingStatus {
  id            String        @id @default(uuid())
  trackingId    String
  Tracking      Tracking      @relation(fields: [trackingId], references: [id])
  messageId     String
  StatusMessage StatusMessage @relation(fields: [messageId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@map("tracking_status")
}
